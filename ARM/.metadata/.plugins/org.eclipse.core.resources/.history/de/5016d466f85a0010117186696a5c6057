/*
 * ultrasonic.c
 *
 *  Created on: Jul 6, 2025
 *      Author: user8
 */

#include "ultrasonic.h"

uint16_t IC_Value1 = 0;
uint16_t IC_Value2 = 0;
uint16_t echoTime = 0;
uint8_t captureFlag = 0;
uint8_t distance = 0;

// 각각 거리 전역 변수
uint8_t distance_center = 0;
uint8_t distance_left = 0;
uint8_t distance_right = 0;


// 공통 캡처값
uint16_t IC1 = 0, IC2 = 0;
uint8_t captureFlag_center = 0;
uint8_t captureFlag_left = 0;
uint8_t captureFlag_right = 0;

//void HCSR04_TRIG(void)
//{
//  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
//  delay_us(10);
//  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
//
//  __HAL_TIM_ENABLE_IT(&htim2, TIM_IT_CC1);  // ECHO 인터럽트 활성화 (변경)
//}

void HCSR04_TRIG_CENTER(void) {
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  delay_us(10);
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);

  __HAL_TIM_ENABLE_IT(&htim2, TIM_IT_CC1); // ECHo 인터럽트 활성화 (변경)
}

void HCSR04_TRIG_LEFT(void) {
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
  delay_us(10);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_SET);

  __HAL_TIM_ENABLE_IT(&htim4, TIM_IT_CC1);
}

void HCSR04_TRIG_RIGHT(void) {
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
  delay_us(10);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);

  __HAL_TIM_ENABLE_IT(&htim4, TIM_IT_CC2);
}

//void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
//{
//  if (htim->Instance == TIM2 && htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)  // TIM2로 변경
//  {
//    if (captureFlag == 0)
//    {
//      IC_Value1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
//      captureFlag = 1;
//      __HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING);
//    }
//    else if (captureFlag == 1)
//    {
//      IC_Value2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
//      __HAL_TIM_SET_COUNTER(htim, 0);
//
//      if (IC_Value2 > IC_Value1)
//        echoTime = IC_Value2 - IC_Value1;
//      else
//        echoTime = (0xFFFF - IC_Value1 + IC_Value2);
//
//      distance = echoTime / 58;
//      captureFlag = 0;
//
//      __HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING);
//      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
//    }
//  }
//}

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
  // 중앙 초음파 : TIM2_CH1
  if(htim->Instance == TIM2 && htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
  {
    if(captureFlag_center == 0)
    {
      IC1_center = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
      captureFlag_center = 1;
      __HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING);
    }
    else
    {
      IC2_center = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
      if(IC2_center > IC1_center)
        echoTime_center = IC2_center - IC1_center;
      else
        echoTime_center = (0xFFFF - IC1_center) + IC2_center;
      distance_center = echoTime_center / 58;
      captureFlag_center = 0;
      __HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING);
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
    }
  }

  // 좌측 초음파 : TIM2_CH2
  else if(htim->Instance == TIM4 && htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
  {
    if(captureFlag_left == 0)
    {
      IC1_left = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_2);
      captureFlag_left = 1;
      __HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_2, TIM_INPUTCHANNELPOLARITY_FALLING);
    }
    else
    {
      IC2_left = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_2);
      if(IC2_left > IC1_left)
        echoTime_left = IC2_left - IC1_left;
      else
        echoTime_left = (0xFFFF - IC1_left) + IC2_left;
      distance_left = echoTime_left / 58;
      captureFlag_left = 0;
      __HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_2, TIM_INPUTCHANNELPOLARITY_RISING);
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
    }
  }

  // 우측 초음파 : TIM4_CH1
  else if(htim->Instance == TIM4 && htim->Channel == HAL_TIM_ACTIVE_CHANNEL_2)
  {
    if(captureFlag_right == 0)
    {
      IC1_right = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
      captureFlag_right = 1;
      __HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING);
    }
    else
    {
      IC2_right = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
      if(IC2_right > IC1_right)
        echoTime_right = IC2_right - IC1_right;
      else
        echoTime_right = (0xFFFF - IC1_right) + IC2_right;
      distance_right = echoTime_right / 58;
      captureFlag_right = 0;
      __HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING);
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
    }
  }
}
